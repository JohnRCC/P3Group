#ifndef FIELDLINE_C
#define FIELDLINE_C
#include <math.h>

// Class to plot electric field once generated by finding the magnitude and direction
// of the greatest gradient change for each point. Adapted from Tristan's sublayer class,
// because I'm hopeless with classes. Thanks buddy!

class Fieldline
{
public:
    // X-coordinate of point
    int xcord;
    // Y-coordinate of point
    int ycord;
    // Small array to keep dir and mag values (fieldvals[0]=mag, fieldvals[1]=dir)
    double fieldvals[2];

    // Constructor
    Fieldline(int,int,double,double,double,double,double,double);
    
    // Fieldline(x,y,top,bottom,left,right,dx,dy)
    // this is assuming we're keeping dx and dy values (which we won't for exclusively bitmap input)
};

// Function to calculate mag and direction based on inputs
Fieldline::Fieldline(int x,int y,double t,double b,double l,double r,double dx,double dy)
{
  using namespace std;

  // Get class vars from input
  xcord=x;
  ycord=y;
    
  // Calculate magnitude of resultant gradient
  //double mag = sqrt(pow((r-l)/2.0*dx,2)+pow((b-t)/2.0*dy,2));
  double deex = (r-l)/(2.0*dx);

  // Calculate direction of gradient
  // Here, an angle of zero is an arrow immediately right --->
  // and positive is moving anti-clockwise around the circle
  //double dir = atan(((b-t)/(r-l))*(dx/dy));
  double deey = (b-t)/(2.0*dy);

  // Put values into array
  fieldvals[0] = -1*deex;
  fieldvals[1] = -1*deey;
}


//Function which takes array as input and returns pointer to field array
Fieldline* fline(int x,int y,double** array,double dx,double dy)
{
  Fieldline temp(x,y,array[x-1][y],array[x+1][y],array[x][y-1],array[x][y+1],dx,dy);
  
  //get pointer to array
  Fieldline *pointer = &temp;
  return pointer;
}

#endif
