#!/bin/bash

 ## update mean (numeric value in AWK function 'musq'))





 ## declare AWK function
#musq=$(cat << 'EOF'

#	function abs(value)
#	{
#
#		 return (value<0?-value:value);
#	}
#{
#	abs($1)
#	print ($3-4.0)*($3-4.0)
#}
#EOF
#)

sum=$2
#echo variance.bsh sum=$sum
n=$3
#echo variance.bsh total=$n
#echo here is test.dat
#cat $1


#paste $1 | awk -v su=$sum -v nu=$n '{sqq = ($3-(su*(50/nu)))*($3-(su*(50/nu)))} END { print sqq }' >> squares$1


 ## find (percentdif-mu)^2
paste $1 | awk -v su=$sum -v nu=$n '{ for (i = 1; i <= NR; i++) if (NR == i) print ($3-(su/nu)*($3-(su/nu)))/nu}' $1 > squares$1

paste squares$1 | awk '{ if($1>=0) {print $1} else {print $1*-1}}' > squares2$1

 ## find sum of all (percentdif-mu)^2
SUMsq="$(cat squares2$1 | awk '{ sumsq += $1 } END { print sumsq }')"
Mvar="$(cat squares2$1 | wc -l)" ## find M to be summed over

 ## find and cat variance into varianc.dat
VARIANCE="$(echo $SUMsq $Mvar | awk '{ ver = ($1/$2) } END { print ver }')"




	## cat all calculated 'outputs' to info.txt
echo $1: sum of \(pd-mu\)^2sq = $SUMsq, total number of values = $Mvar, VARIANCE = $VARIANCE >> info.dat

	## cat variance to variance.txt
echo $VARIANCE >> variance.dat

echo VARIANCE = $VARIANCE  ## print variance to screen


 ## remove temp file
if [ -e ./squares$1 ] || [ -e ./squares2$1 ]
   then
	rm ./squares$1 ./squares2$1
fi	

exit
